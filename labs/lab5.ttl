#autor: José Astorga
#P1
:PC owl:equivalentClass [ owl:unionOf(:Laptop :Desktop)] .

#P2
:WindowsPC owl:equivalentClass [ owl:someValuesFrom [owl:hasValue :WindowsOS; owl:onProperty rdf:type]; owl:onProperty :hasOS ]  . 

#P3
:WindowsLaptop owl:equivalentClass [owl:intersectionOf (:Laptop :WindowsPC)] .

#P4
#just to test
#:CarlasLaptop rdf:type :GamingPC . 
[owl:hasValue :Crysis ; owl:onProperty :canRun ] rdfs:subClassOf :GamingPC  .

#P5
:DualCoreProcessor rdfs:subClassOf :Processor .
:DualCoreProcessor owl:equivalentClass [ owl:hasValue 2; owl:onProperty :numberOfCores] .

#P6
[owl:hasValue :WindowsLaptop; owl:onProperty rdf:type; owl:hasValue :SingleBoot; owl:onProperty	 rdf:type ]  rdfs:subClassOf [owl:allValuesFrom :WindowsOS; owl:onProperty :hasOS] .

#P7
:SingleBoot rdfs:subClassOf [owl:maxCardinality 1; owl:onProperty :hasOS] .

#P8
#:WindowsPC rdfs:subClassOf [owl:maxQualifiedCardinality 0 ; owl:onProperty :hasOS ; owl:onClass :LinuxOS] .

#P9
:DualBoot rdfs:subClassOf [owl:cardinality 2; owl:onProperty :hasOS] .
#:Ubuntu14 owl:differentFrom :Windows10 .

#No se infiere que :BobDesktop es :DualBoot
# Esto por que se ha definido una restricción que deben cumplir todos los :DualBoot, pero que no implica que si un "recurso x" cumple con la restricción entonces es un :DualBoot (no se puede inferir)
# (:DualBoot es una subclase de todos los elementos que tienen cardinalidad 2 en la propiedad :hasOS, pero no todos los elementos de cardinalidad 2 son :DualBoot ) #otra manera de decirlo
# Además, la cardinalidad de la propiedad :hasOS en :BobDesktop no es 2 necesariamente, ya que para que sea 2 primero hay que definir que :Windows10 no es igual a :Ubuntu14 (en el caso de que si se pudiese inferir)